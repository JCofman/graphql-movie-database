type Query {
  """
  Get movies from the database. This query uses the discover api, which
  supports a wide range of filters and sorting options.
  """
  allMovies(
    """
    Get movies matching a search query. Note: using `search` in conjunction
    with other filters or sorting options is not currently supported.
    """
    search: String
    """
    The criteria on which results are sorted
    """
    sortBy: MovieSortBy = POPULARITY
    """
    The order in which results are sorted
    """
    sortOrder: SortOrder = DESC
    """
    Filter: only include results with a specific primary release year.

    Format: "YYYY-MM-DD"
    """
    primaryReleaseYear: String
    """
    Filter: only include movies that have a primary release date that is less
    than or equal to the specified value.

    Format: "YYYY-MM-DD"
    """
    primaryReleaseDate_LTE: String
    """
    Filter and only include movies that have a release date (looking at all
    release dates) that is greater or equal to the specified value.

    Format: "YYYY-MM-DD"
    """
    primaryReleaseDate_GTE: String
    """
    Filter and only include movies that have a release date (looking at all
    release dates) that is greater or equal to the specified value.

    Format: "YYYY-MM-DD"
    """
    releaseDate_GTE: String
    """
    Filter and only include movies that have a release date (looking at all
    release dates) that is less than or equal to the specified value.

    Format: "YYYY-MM-DD"
    """
    releaseDate_LTE: String
    """
    Filter and only include movies that have a vote count that is greater or
    equal to the specified value.
    """
    voteCount_GTE: Int
    """
    Filter and only include movies that have a vote count that is less than or
    equal to the specified value.
    """
    voteCount_LTE: Int
    """
    Filter and only include movies that have a rating that is greater or equal to
    the specified value.
    """
    voteAverage_GTE: Float
    """
    Filter and only include movies that have a rating that is less than or equal
    to the specified value.
    """
    voteAverage_LTE: Float
    """
    Find movies these people are included in the cast
    """
    withCast: String
    """
    A comma separated list of person ID's. Only include movies that have one of
    the ID's added as a crew member.
    """
    withCrew: String
    """
    A comma separated list of production company ID's. Only include movies that
    have one of the ID's added as a production company.
    """
    withCompanies: String
    """
    Comma separated value of genre ids that you want to exclude from the results.
    """
    withGenres: String
    """
    A comma separated list of keyword ID's. Only include movies that have one of
    the ID's added as a keyword.
    """
    withKeywords: String
    """
    A comma separated list of person ID's. Only include movies that have one of
    the ID's added as a either a actor or a crew member.
    """
    withPeople: String
    """
    Find movies in a specific language. Language should be in the following
    format: `[a-z]{2})-([A-Z]{2})`.
    """
    language: String
    """
    Limit the results to a specific year (looking at all release dates)
    """
    year: Int
    """
    Specify a ISO 3166-1 code to filter release dates. Must be uppercase.
    pattern: ^[A-Z]{2}$
    """
    region: String
    """
    Specify an ISO 639-1 string to filter results by their original language
    value.
    """
    withOriginalLanguage: String
    page: Int
  ): MoviesConnection!
}

enum MovieSortBy {
  ORDER
  ORIGINAL_TITLE
  POPULARITY
  PRIMARY_RELEASE_DATE
  RELEASE_DATE
  REVENUE
  VOTE_AVERAGE
  VOTE_COUNT
}
