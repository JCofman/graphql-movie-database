# import List, ListSortBy from "account/lists.graphql"
# import Watchlist, Favorites from "account/watchlist.graphql"

# Table of Contents
# 1. Mutations
# 2. Response Types
# 3. Input Types

# ===================================================================
#  1. Mutations
# ===================================================================
type Mutation {
  """
  Creates a new custom List for the logged in user. This requires a valid user
  access token.
  """
  createList(input: CreateListInput): ListMutationResponse

  """
  Updates the details of an existing List. This requires a valid user access
  token. The user must also have permission to edit the given list.
  """
  updateList(id: ID!, input: UpdateListInput): ListMutationResponse

  """
  Deletes a custom List. This action is not reversible so take care when issuing
  it. This action can only be performed by the user who created the List. It
  requires a valid user access token for the user.
  """
  deleteList(id: ID!): ListMutationResponse

  """
  Clear all of the items from an existing list in a single request.
  This action cannot be reversed so use it with caution. This action can only
  be performed by the user who created the List. It requires a valid user access
  token for the user.
  """
  clearListItems(id: ID!): ListMutationResponse

  """
  Add any number of items to an existing list. Items can include a mix of movie
  and TV shows.

  The results of this query will return a results array. Each result includes a
  success field. If a result is false this will usually indicate that the item
  already exists on the list. It may also indicate that the item could not be
  found.

  This action can only be performed by the user who created the List. It
  requires a valid user access token for the user.
  """
  addListItems(id: ID!, items: [ListItemInput]!): ListItemsMutationResponse

  """
  This method will let you remove items from a list. You can remove multiple
  items at a time. This action can only be performed by the user who created
  the List. It requires a valid user access token for the user.
  """
  removeListItems(id: ID!, items: [ListItemInput]!): ListItemsMutationResponse

  """
  Add or remove a media item to the user's watchlist. The user must be logged
  in to perform this action.
  """
  addToWatchlist(
    accountId: ID!
    input: AddToWatchlistInput
  ): WatchlistMutationResponse

  """
  Add or remove a media item to favorites. The user must be logged in to
  perform this action.
  """
  addToFavorites(
    accountId: ID!
    input: AddToFavoritesInput
  ): FavoriteMutationResponse

  """
  Submit a user rating for a Movie or TV show.  The value can be number between
  `0.5` and `10.0`. It has to be a multiple of `0.5`. Setting rating to `null`
  will remove the user rating on this movie. Note: this can only be performed by
  logged in user.
  """
  submitUserRating(input: UserRatingInput): RatingMutationResponse

  """
  This mutation generates a new request token that you can ask a user to
  approve. This is the first step in user authentication flow. This takes an
  optional `redirectTo` argument which can be used to specify a redirect URL or
  callback that will be executed once the user logs in and approves the request
  token.
  """
  createRequestToken(redirectTo: String): CreateRequestTokenResponse
  """
  This mutation creates a new user access token. This is the final step in the
  user authentication flow. It takes a request token that has been authorized by
  the user and creates an access token.
  """
  createAccessToken(requestToken: String!): CreateAccessTokenResponse
  """
  This mutation logs the user out and deletes the access token so it cannot be
  used again in the future. Note. due to a bug in the TMDB API, this method is
  not currently working. See this [ticket](https://trello.com/c/Q1ceDQ8e)
  """
  deleteAccessToken: DeleteAccessTokenResponse
}

# ===================================================================
#  2. Response Types
# ===================================================================
interface MutationResponse {
  success: Boolean!
  message: String!
}

"""
The response type for mutations that create/update/delete a List.
"""
type ListMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  list(page: Int, sortBy: ListSortBy, sortOrder: SortOrder): List
}

"""
The response type for mutations that add or remove items from a List. In
addition to the updated List object the response includes a list of results
that provides information about each item that was added/removed.
"""
type ListItemsMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  results: [ListItemResult]!
  list(page: Int, sortBy: ListSortBy, sortOrder: SortOrder): List
}

"""
This type represents the result of an individual item that has been added to or
removed from a List as the result of a mutation.
"""
type ListItemResult {
  mediaType: MediaType!
  id: ID!
  success: Boolean!
}

type WatchlistMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  watchlist: Watchlist
  media: Media
}

type FavoriteMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  favorites: Favorites
  media: Media
}

type RatingMutationResponse implements MutationResponse {
  success: Boolean!
  message: String!
  value: Float
  media: Media
  ratings: Ratings
}

type CreateRequestTokenResponse implements MutationResponse {
  success: Boolean!
  message: String!
  requestToken: String
}

type CreateAccessTokenResponse implements MutationResponse {
  success: Boolean!
  message: String!
  token: String
  accountId: ID
}

type DeleteAccessTokenResponse implements MutationResponse {
  success: Boolean!
  message: String!
}

# ===================================================================
#  3. Input Types
# ===================================================================
input ListItemInput {
  title: String # TODO remove
  id: ID!
  mediaType: MediaType!
}

input CreateListInput {
  name: String!
  description: String
  public: Boolean = false
  iso_639_1: String
  iso_3166_1: String
}

input UpdateListInput {
  name: String
  description: String
  sortBy: ListSortBy
  sortOrder: SortOrder
  public: Boolean
  iso_639_1: String
  iso_3166_1: String
}

input AddToWatchlistInput {
  id: ID!
  mediaType: MediaType!
  watchlist: Boolean = true
}

input AddToFavoritesInput {
  id: ID!
  mediaType: MediaType!
  favorite: Boolean = true
}

input UserRatingInput {
  id: ID!
  mediaType: MediaType!
  value: Float
}
